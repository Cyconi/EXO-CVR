using ABI_RC.Core.Networking;
using ABI_RC.Core.Networking.IO.Instancing;
using DarkRift;

namespace EXO_CVR.FishsCumCorner.Lab
{
     public static class ServerExploits
    {
        public static void KickUser(string UserID)
        {
            using (DarkRiftWriter darkRiftWriter = DarkRiftWriter.Create())
            {
                darkRiftWriter.Write(UserID);
                using (Message message = Message.Create(9040, darkRiftWriter))
                {
                    NetworkManager.Instance.GameNetwork.SendMessage(message, SendMode.Reliable);
                }
            }
        }
        public static  void ForceKick(uint Sever, ushort KickID)
        {
            var instance = InstanceDetails_t.InstanceDetailsPool.GetObject();
            Dissonance.Networking.PacketWriter packetWriter = new Dissonance.Networking.PacketWriter(new byte[10 + instance.InstanceName.Length * 4]);
            packetWriter.WriteDeltaChannelState(Sever, false, KickID, instance.InstanceName);
        }
    }
}
